import asyncio
import logging
import json
from aiogram import Bot, Dispatcher, types
from aiogram.types import Message
from aiogram.filters import Command

TOKEN = "TOKEN"
ADMIN_ID = "row_wow"

bot = Bot(token=TOKEN)
dp = Dispatcher()

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)

# –ö–æ–º–∞–Ω–¥–∞ /start
@dp.message(Command("start"))
async def start_handler(message: Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ –∑–∞–∫–∞–∑–∞—Ö.")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–∫–∞–∑–æ–≤
async def send_order_notification(order_data):
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∑–∞–∫–∞–∑ –≤ Telegram –∞–¥–º–∏–Ω—É
    """
    try:
        text = f"üì¶ *–ù–æ–≤—ã–π –∑–∞–∫–∞–∑!*\n\nüë§ *–ö–æ–Ω—Ç–∞–∫—Ç—ã –∫–ª–∏–µ–Ω—Ç–∞:* {order_data['contacts']}\n\nüõç *–°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤:*\n"
        for item in order_data['items']:
            text += f" - {item['name']} (–†–∞–∑–º–µ—Ä: {item['size']}, –¶–≤–µ—Ç: {item['color']})\n"

        await bot.send_message(ADMIN_ID, text, parse_mode="Markdown")
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: {e}")

async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
